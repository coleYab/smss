// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package repository

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgtype"
)

type AuditLog struct {
	ID        uuid.UUID     `json:"id"`
	UserID    uuid.NullUUID `json:"user_id"`
	Action    string        `json:"action"`
	Timestamp sql.NullTime  `json:"timestamp"`
}

type Book struct {
	ID                 uuid.UUID `json:"id"`
	Title              string    `json:"title"`
	Author             string    `json:"author"`
	Isbn               string    `json:"isbn"`
	Category           string    `json:"category"`
	AvailabilityStatus bool      `json:"availability_status"`
}

type BookRent struct {
	ID           uuid.UUID `json:"id"`
	BookID       uuid.UUID `json:"book_id"`
	StudentID    uuid.UUID `json:"student_id"`
	LibrarianID  uuid.UUID `json:"librarian_id"`
	RentDate     time.Time `json:"rent_date"`
	ReturnWithin int32     `json:"return_within"`
	Status       string    `json:"status"`
}

type Donation struct {
	ID           uuid.UUID      `json:"id"`
	DonorID      uuid.NullUUID  `json:"donor_id"`
	StudentID    uuid.NullUUID  `json:"student_id"`
	Amount       pgtype.Numeric `json:"amount"`
	DonationDate time.Time      `json:"donation_date"`
	Status       string         `json:"status"`
}

type Donor struct {
	ID           uuid.UUID      `json:"id"`
	Name         string         `json:"name"`
	Organization sql.NullString `json:"organization"`
	TotalDonated pgtype.Numeric `json:"total_donated"`
}

type Librarian struct {
	ID            uuid.UUID `json:"id"`
	LibraryBranch string    `json:"library_branch"`
}

type ProgressReport struct {
	ID          uuid.UUID      `json:"id"`
	StudentID   uuid.NullUUID  `json:"student_id"`
	ReportDate  time.Time      `json:"report_date"`
	Description string         `json:"description"`
	Status      string         `json:"status"`
	Comments    sql.NullString `json:"comments"`
	SubmittedAt sql.NullTime   `json:"submitted_at"`
	ValidatedAt sql.NullTime   `json:"validated_at"`
	StaffID     uuid.NullUUID  `json:"staff_id"`
}

type Staff struct {
	ID         uuid.UUID `json:"id"`
	Department string    `json:"department"`
}

type Student struct {
	ID                uuid.UUID `json:"id"`
	Name              string    `json:"name"`
	DateOfBirth       time.Time `json:"date_of_birth"`
	ParentContactInfo string    `json:"parent_contact_info"`
	EligibilityStatus string    `json:"eligibility_status"`
}

type StudentProgress struct {
	ID            uuid.UUID      `json:"id"`
	StudentID     uuid.NullUUID  `json:"student_id"`
	ProgressDate  time.Time      `json:"progress_date"`
	AcademicScore pgtype.Numeric `json:"academic_score"`
	ActivityScore pgtype.Numeric `json:"activity_score"`
	Comments      string         `json:"comments"`
	Status        string         `json:"status"`
	CreatedAt     sql.NullTime   `json:"created_at"`
	UpdatedAt     sql.NullTime   `json:"updated_at"`
	StaffID       uuid.NullUUID  `json:"staff_id"`
}

type Transcript struct {
	ID          uuid.UUID    `json:"id"`
	StudentID   uuid.UUID    `json:"student_id"`
	FileUrl     string       `json:"file_url"`
	Status      string       `json:"status"`
	SubmittedAt time.Time    `json:"submitted_at"`
	ValidatedAt sql.NullTime `json:"validated_at"`
}

type User struct {
	ID        uuid.UUID `json:"id"`
	Username  string    `json:"username"`
	Password  string    `json:"password"`
	Email     string    `json:"email"`
	Role      string    `json:"role"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}
